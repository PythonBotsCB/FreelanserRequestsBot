from constants import *
from config import *
from states.FSMad_user import *
from permission.roles import UserBot

from aiogram.dispatcher.filters import Text
from aiogram.types import *
from aiogram.dispatcher import FSMContext
import json

@dp.message_handler(Text(equals='üèÆ –î–æ–ø. –§—É–Ω–∫—Ü–∏–∏'))
async def additional_services(message: Message) -> None:
    ''' ‚ûï –î–æ–ø —É—Å–ª—É–≥–∏ '''

    keyboard = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = [
        KeyboardButton('‚¨ÜÔ∏è –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ'),
        KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç'),
        KeyboardButton('üìù–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'),
        KeyboardButton('–†–µ–∫–ª–∞–º–∞ –≤ –±–æ—Ç–µ üí∏'),
        KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
    ]

    keyboard.add(*buttons)

    await message.reply('¬´‚¨ÜÔ∏è –ù–∞–π—Ç–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞¬ª - —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–µ –æ –ø–æ–∏—Å–∫–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞\n\n¬´‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç¬ª - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–∞ —á–∞—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–µ—Ä–µ—Å—ã–ª–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –Ω–µ–≥–æ.\n\n¬´üìù –ó–∞–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª - –µ—Å–ª–∏ –≤–∞—à–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Ç –≤ "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫", —Ç–æ –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É', reply_markup=keyboard)

@dp.message_handler(Text(equals='‚¨ÜÔ∏è –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ'), state=None)
async def set_ad(message: Message) -> None:
    ''' –ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ '''
    # TODO: –î–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ callback_query

    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [InlineKeyboardButton(name, callback_data=name) for name in CATEGORY_BUTTONS]
    keyboard.add(*buttons)

    await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏', reply_markup=keyboard)
    await SetAd.category.set()


@dp.callback_query_handler(lambda callback: True, state=SetAd.category)
async def write_ad(callback_query: CallbackQuery, state: FSMContext) -> None:
    message = callback_query.message

    await state.update_data(category=callback_query.data)
    await message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {callback_query.data}. –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É, –º—ã –≤—ã–ª–æ–∂–∏–º –µ—ë –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏. –í–ê–ñ–ù–û! –ú—ã –Ω–µ –ø—É–±–ª–∏–∫—É–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–æ—Å—Ç—ã –ø—Ä–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞; –µ—Å–ª–∏ –≤—ã –∏—â–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ç–æ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞—è–≤–∫–∏. –û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É: –Ø —Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥, –ø–æ–º–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–ª–∞–º—É –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω–æ–µ –Ω–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è!\n(/cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã)')
    await SetAd.next()

@dp.message_handler(state=SetAd.text_request)
async def save_ad(message: Message, state: FSMContext) -> None:

    if message.text == '/cancel':
        await message.answer('–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞')
        await state.finish()

        return

    await message.answer('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –µ—Å–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è –æ–¥–æ–±—Ä–∏—Ç –∑–∞—è–≤–∫—É, —Ç–æ –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')

    await state.update_data(text=message.text)
    data = await state.get_data()

    with open(f'{DB_LOC}/user_ads.json', encoding='utf-8') as file:
        all_ads = json.load(file)
        all_ads.append({
            "user" : "@" + message.from_user.username,
            "text" : data.get('text'),
            "category" : data.get('category')
        })
    with open(f'{DB_LOC}/user_ads.json', 'w', encoding='utf-8') as file:
        json.dump(all_ads, file, ensure_ascii=False, indent=4)

    with open(f'{DB_LOC}/admins.json', encoding='utf-8') as file:
        admins = json.load(file)

    with open(f'{DB_LOC}/names.json', encoding='utf-8') as file:
        names = json.load(file)

    for name in names:
        if names[name] in admins:

            await bot.send_message(name, '–ü–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—é, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É "–ê–¥–º–∏–Ω–∫–∞"')


    await state.finish()


@dp.message_handler(Text(equals='‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç'), state=None)
async def add_to_chat(message: Message) -> None:

    keyboard = InlineKeyboardMarkup()
    buttons = [
        InlineKeyboardButton('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data='–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç'),
        InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É')
    ]
    keyboard.add(*buttons)

    await message.reply('–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –≤ –±—É–¥—É—â–µ–º –º—ã –±—É–¥–µ–º –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∑–∞—è–≤–∫–∏, –≤—ã –º–æ–∂–µ—Ç–µ –ª–∏–±–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –Ω–µ–≥–æ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=keyboard)

@dp.message_handler(Text(equals='üìù–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'))
async def order_direction(message: Message) -> None:
    await message.reply('–ï—Å–ª–∏ —Ç–≤–æ–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Ç –≤ "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫", —Ç–æ –º–æ–∂–µ—à—å –µ–≥–æ –∑–∞–∫–∞–∑–∞—Ç—å. –°—Ç–æ–∏–º–æ—Å—Ç—å 5000 —Ä—É–±, —ç—Ç–æ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –∑–∞ 3 –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏. –ï—Å–ª–∏ –≤—Å–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–∏—à–∏ —Å–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–Ω–µ –≤ –ª—Å @COJ_ZhIV')

@dp.message_handler(Text(equals='–†–µ–∫–ª–∞–º–∞ –≤ –±–æ—Ç–µ üí∏'))
async def buy_advertising(message: Message) -> None:
    await message.reply('–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ https://t.me/+2Grf99Dpkf4zM2Zi')





